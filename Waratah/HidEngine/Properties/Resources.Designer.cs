//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.HidTools.HidEngine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.HidTools.HidEngine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must contain a least 1 report.
        /// </summary>
        internal static string ExceptionDescriptorApplicationCollectionModuleNoReports {
            get {
                return ResourceManager.GetString("ExceptionDescriptorApplicationCollectionModuleNoReports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify &apos;{0}&apos; flag within &apos;{1}&apos; report.
        /// </summary>
        internal static string ExceptionDescriptorArrayModuleInvalidFlag {
            get {
                return ResourceManager.GetString("ExceptionDescriptorArrayModuleInvalidFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find report in ancestor chain.
        /// </summary>
        internal static string ExceptionDescriptorBaseElementModuleCannotFindReport {
            get {
                return ResourceManager.GetString("ExceptionDescriptorBaseElementModuleCannotFindReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; invalid for count.
        /// </summary>
        internal static string ExceptionDescriptorBaseElementModuleInvalidCount {
            get {
                return ResourceManager.GetString("ExceptionDescriptorBaseElementModuleInvalidCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; invalid for size.
        /// </summary>
        internal static string ExceptionDescriptorBaseElementModuleInvalidSize {
            get {
                return ResourceManager.GetString("ExceptionDescriptorBaseElementModuleInvalidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid kind &apos;{0}&apos;.  Only &apos;{1}&apos; and &apos;{2}&apos; collections currently supported.
        /// </summary>
        internal static string ExceptionDescriptorCollectionModuleInvalidSupport {
            get {
                return ResourceManager.GetString("ExceptionDescriptorCollectionModuleInvalidSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must contain at least 1 item.
        /// </summary>
        internal static string ExceptionDescriptorCollectionModuleNoItems {
            get {
                return ResourceManager.GetString("ExceptionDescriptorCollectionModuleNoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only paddingItem(s) encountered in Collection.  Collection must contain at least 1 non-padding item to be valid..
        /// </summary>
        internal static string ExceptionDescriptorCollectionOnlyPaddingItemsEncountered {
            get {
                return ResourceManager.GetString("ExceptionDescriptorCollectionOnlyPaddingItemsEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not calculate bits required for logical range [{0}, {1}].
        /// </summary>
        internal static string ExceptionDescriptorCouldNotCalculateLogicalRange {
            get {
                return ResourceManager.GetString("ExceptionDescriptorCouldNotCalculateLogicalRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify size when logicalRange is specified.
        /// </summary>
        internal static string ExceptionDescriptorElementCannotSpecifySize {
            get {
                return ResourceManager.GetString("ExceptionDescriptorElementCannotSpecifySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size must be specified when logicalRange is absent.
        /// </summary>
        internal static string ExceptionDescriptorElementSizeMustBeSpecified {
            get {
                return ResourceManager.GetString("ExceptionDescriptorElementSizeMustBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size must be specified when logicalRange is maxSigned.
        /// </summary>
        internal static string ExceptionDescriptorElementSizeMustBeSpecifiedWhenMaxSigned {
            get {
                return ResourceManager.GetString("ExceptionDescriptorElementSizeMustBeSpecifiedWhenMaxSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size must be specified when logicalRange is maxUnsigned.
        /// </summary>
        internal static string ExceptionDescriptorElementSizeMustBeSpecifiedWhenMaxUnsigned {
            get {
                return ResourceManager.GetString("ExceptionDescriptorElementSizeMustBeSpecifiedWhenMaxUnsigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size &apos;{0}&apos; must be &gt;1 for maxSigned value to have meaning.
        /// </summary>
        internal static string ExceptionDescriptorElementSizeTooSmallForMaxSigned {
            get {
                return ResourceManager.GetString("ExceptionDescriptorElementSizeTooSmallForMaxSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 0, 1, 2, 4 bytes are valid, actual &apos;{0}&apos;.
        /// </summary>
        internal static string ExceptionDescriptorInvalidDataSize {
            get {
                return ResourceManager.GetString("ExceptionDescriptorInvalidDataSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid logicalRange.  Max &apos;{0}&apos; &lt;= Min &apos;{1}&apos;.
        /// </summary>
        internal static string ExceptionDescriptorInvalidLogicalRange {
            get {
                return ResourceManager.GetString("ExceptionDescriptorInvalidLogicalRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a usage.
        /// </summary>
        internal static string ExceptionDescriptorModuleNoUsage {
            get {
                return ResourceManager.GetString("ExceptionDescriptorModuleNoUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify at least 1 ApplicationCollection..
        /// </summary>
        internal static string ExceptionDescriptorNoApplicationCollections {
            get {
                return ResourceManager.GetString("ExceptionDescriptorNoApplicationCollections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overspanning detected; not possible to automatically add padding to prevent overspanning..
        /// </summary>
        internal static string ExceptionDescriptorOverspanningCouldntBePrevented {
            get {
                return ResourceManager.GetString("ExceptionDescriptorOverspanningCouldntBePrevented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Physical range must be decimal.
        /// </summary>
        internal static string ExceptionDescriptorPhysicalRangeMustBeDecimal {
            get {
                return ResourceManager.GetString("ExceptionDescriptorPhysicalRangeMustBeDecimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Id ({0}) must be between {1} and {2}(inclusive).
        /// </summary>
        internal static string ExceptionDescriptorReportIdInvalidRange {
            get {
                return ResourceManager.GetString("ExceptionDescriptorReportIdInvalidRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report empty, must contain at least 1 item.
        /// </summary>
        internal static string ExceptionDescriptorReportModuleNoItems {
            get {
                return ResourceManager.GetString("ExceptionDescriptorReportModuleNoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only paddingItem(s) encountered in Report.  Report must contain at least 1 non-padding item to be valid..
        /// </summary>
        internal static string ExceptionDescriptorReportOnlyPaddingItemsEncountered {
            get {
                return ResourceManager.GetString("ExceptionDescriptorReportOnlyPaddingItemsEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected module uncountered.
        /// </summary>
        internal static string ExceptionDescriptorReportUnexpectedModuleEncountered {
            get {
                return ResourceManager.GetString("ExceptionDescriptorReportUnexpectedModuleEncountered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Descriptor is {0} bytes.  Must be &lt;= {1}.
        /// </summary>
        internal static string ExceptionDescriptorTooBig {
            get {
                return ResourceManager.GetString("ExceptionDescriptorTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UsageEnd is either invalid or missing.
        /// </summary>
        internal static string ExceptionDescriptorUsageEndMissing {
            get {
                return ResourceManager.GetString("ExceptionDescriptorUsageEndMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page for UsageStart ({0}) and Page for UsageEnd ({1}) are different.
        /// </summary>
        internal static string ExceptionDescriptorUsagePagesDiffer {
            get {
                return ResourceManager.GetString("ExceptionDescriptorUsagePagesDiffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Usage ({0}) in range must be smaller than last Usage ({1}) in range.
        /// </summary>
        internal static string ExceptionDescriptorUsageStartIdGreaterThanEnd {
            get {
                return ResourceManager.GetString("ExceptionDescriptorUsageStartIdGreaterThanEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UsageStart is either invalid or missing.
        /// </summary>
        internal static string ExceptionDescriptorUsageStartMissing {
            get {
                return ResourceManager.GetString("ExceptionDescriptorUsageStartMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find attribute for this item..
        /// </summary>
        internal static string ExceptionItemCouldNotFindAttribute {
            get {
                return ResourceManager.GetString("ExceptionItemCouldNotFindAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} invalid for count.
        /// </summary>
        internal static string ExceptionItemInvalidCount {
            get {
                return ResourceManager.GetString("ExceptionItemInvalidCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Id ({0}) must be between {1} and {2}(inclusive).
        /// </summary>
        internal static string ExceptionItemInvalidReportId {
            get {
                return ResourceManager.GetString("ExceptionItemInvalidReportId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value {0} invalid for size.
        /// </summary>
        internal static string ExceptionItemInvalidSize {
            get {
                return ResourceManager.GetString("ExceptionItemInvalidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor-defined collection must be between {0} and {1}: actual {2}&quot;.
        /// </summary>
        internal static string ExceptionItemInvalidVendorDefinedCollection {
            get {
                return ResourceManager.GetString("ExceptionItemInvalidVendorDefinedCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error @ &apos;{0}&apos; (L{1}) WAR{2:X}: {3}..
        /// </summary>
        internal static string ExceptionRootMessage {
            get {
                return ResourceManager.GetString("ExceptionRootMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error - WARA{0:X}: {1}..
        /// </summary>
        internal static string ExceptionRootMessageNoTag {
            get {
                return ResourceManager.GetString("ExceptionRootMessageNoTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension must not be specified, determined by settings.
        /// </summary>
        internal static string ExceptionSettingsDestinationFileNoExtension {
            get {
                return ResourceManager.GetString("ExceptionSettingsDestinationFileNoExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HID Usage Tables file &apos;{0}&apos; does not exist.
        /// </summary>
        internal static string ExceptionSettingsHidUsageTablesFileDoesNotExist {
            get {
                return ResourceManager.GetString("ExceptionSettingsHidUsageTablesFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse a non {0} HID Usage Tables file.
        /// </summary>
        internal static string ExceptionSettingsHidUsageTablesFileExtensionUnsupported {
            get {
                return ResourceManager.GetString("ExceptionSettingsHidUsageTablesFileExtensionUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid for size {0}.
        /// </summary>
        internal static string ExceptionSettingsInvalidSizeInBits {
            get {
                return ResourceManager.GetString("ExceptionSettingsInvalidSizeInBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No source file specified.
        /// </summary>
        internal static string ExceptionSettingsMissingSourceFile {
            get {
                return ResourceManager.GetString("ExceptionSettingsMissingSourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be either 1, 2 or 4.
        /// </summary>
        internal static string ExceptionSettingsPackingBytesMustBeSize {
            get {
                return ResourceManager.GetString("ExceptionSettingsPackingBytesMustBeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error - WARA{0:X}: {1}..
        /// </summary>
        internal static string ExceptionSettingsRootMessage {
            get {
                return ResourceManager.GetString("ExceptionSettingsRootMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source file &apos;{0}&apos; does not exist.
        /// </summary>
        internal static string ExceptionSettingsSourceFileDoesNotExist {
            get {
                return ResourceManager.GetString("ExceptionSettingsSourceFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse a non {0} source file.
        /// </summary>
        internal static string ExceptionSettingsSourceFileExtensionUnsupported {
            get {
                return ResourceManager.GetString("ExceptionSettingsSourceFileExtensionUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify both &apos;usageRange&apos; and &apos;usages&apos; keys.
        /// </summary>
        internal static string ExceptionTomlArrayItemCannotSpecifyUsageRangeAndUsagesTag {
            get {
                return ResourceManager.GetString("ExceptionTomlArrayItemCannotSpecifyUsageRangeAndUsagesTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required usageRange/usages key, must specify either a usageRange or a usages key..
        /// </summary>
        internal static string ExceptionTomlArrayItemMissingUsageRangeUsagesTag {
            get {
                return ResourceManager.GetString("ExceptionTomlArrayItemMissingUsageRangeUsagesTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a non-zero value.
        /// </summary>
        internal static string ExceptionTomlCannotBeZero {
            get {
                return ResourceManager.GetString("ExceptionTomlCannotBeZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify both &apos;{0}&apos; and &apos;{1}&apos; keys.
        /// </summary>
        internal static string ExceptionTomlCannotSpecifyBothKeys {
            get {
                return ResourceManager.GetString("ExceptionTomlCannotSpecifyBothKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name.  Must be a non-empty string.
        /// </summary>
        internal static string ExceptionTomlCppNameEmpty {
            get {
                return ResourceManager.GetString("ExceptionTomlCppNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name.  Must only contain characters and digits.
        /// </summary>
        internal static string ExceptionTomlCppNameNonDigitsLetters {
            get {
                return ResourceManager.GetString("ExceptionTomlCppNameNonDigitsLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate flag &apos;{0}&apos;.
        /// </summary>
        internal static string ExceptionTomlDuplicateReportFlag {
            get {
                return ResourceManager.GetString("ExceptionTomlDuplicateReportFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &apos;{0}&apos; section detected, previously defined @ L{1}.  Only a single &apos;{0}&apos; is permitted.
        /// </summary>
        internal static string ExceptionTomlDuplicateSettingsTag {
            get {
                return ResourceManager.GetString("ExceptionTomlDuplicateSettingsTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid flag &apos;{0}&apos;. Valid flags: &quot;{1}&quot;.
        /// </summary>
        internal static string ExceptionTomlInvalidReportFlag {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidReportFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid section. Cannot be a root section.
        /// </summary>
        internal static string ExceptionTomlInvalidRootTagPlacement {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidRootTagPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token.
        /// </summary>
        internal static string ExceptionTomlInvalidSectionNameToken {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidSectionNameToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid placement.  Not a valid key/section in &apos;{0}&apos; (L{1}).
        /// </summary>
        internal static string ExceptionTomlInvalidTagPlacement {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidTagPlacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type.  Must be of the form [[..{0}]].
        /// </summary>
        internal static string ExceptionTomlInvalidTypeForSectionTag {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidTypeForSectionTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type.  Valid types, &quot;{0}&quot;.
        /// </summary>
        internal static string ExceptionTomlInvalidTypeForTag {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidTypeForTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type.  Must be of the form [[{0}]].
        /// </summary>
        internal static string ExceptionTomlInvalidTypeForTopLevelSectionTag {
            get {
                return ResourceManager.GetString("ExceptionTomlInvalidTypeForTopLevelSectionTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required &apos;{0}&apos; key.
        /// </summary>
        internal static string ExceptionTomlMissingRequiredKey {
            get {
                return ResourceManager.GetString("ExceptionTomlMissingRequiredKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify either a &apos;{0}&apos;, &apos;{1}&apos; or &apos;{2}&apos; key.
        /// </summary>
        internal static string ExceptionTomlMustSpecifyOneOfThreeKeys {
            get {
                return ResourceManager.GetString("ExceptionTomlMustSpecifyOneOfThreeKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing &apos;{0}&apos; and &apos;{1}&apos; keys.  Must specify at least 1.
        /// </summary>
        internal static string ExceptionTomlMustSpecifyOneOfTwoKeys {
            get {
                return ResourceManager.GetString("ExceptionTomlMustSpecifyOneOfTwoKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flags &apos;{0}&apos; and &apos;{1}&apos; are mutually exclusive.  Both cannot be declared, remove one.
        /// </summary>
        internal static string ExceptionTomlMutuallyExclusiveReportFlags {
            get {
                return ResourceManager.GetString("ExceptionTomlMutuallyExclusiveReportFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type &apos;{0}&apos; found.  Valid types: &quot;{1}&quot;.
        /// </summary>
        internal static string ExceptionTomlOutputFormatKindInvalid {
            get {
                return ResourceManager.GetString("ExceptionTomlOutputFormatKindInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must not be empty.  Valid flags: &quot;{0}&quot;.
        /// </summary>
        internal static string ExceptionTomlReportFlagsCannotBeEmpty {
            get {
                return ResourceManager.GetString("ExceptionTomlReportFlagsCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to id &apos;{0}&apos; utilized in previous report.
        /// </summary>
        internal static string ExceptionTomlReportItemDuplicateReportId {
            get {
                return ResourceManager.GetString("ExceptionTomlReportItemDuplicateReportId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be an array of 2 doubles.
        /// </summary>
        internal static string ExceptionTomlUnitDimensionArrayDimension {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitDimensionArrayDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid dimension.  {0}.
        /// </summary>
        internal static string ExceptionTomlUnitDimensionInvalid {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitDimensionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power field &apos;{0}&apos; cannot contain a fractional component.
        /// </summary>
        internal static string ExceptionTomlUnitDimensionPowerFieldFractional {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitDimensionPowerFieldFractional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid combination of dimensions.  {0}.
        /// </summary>
        internal static string ExceptionTomlUnitInvalidExponent {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitInvalidExponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit with name &apos;{0}&apos; could not be found.
        /// </summary>
        internal static string ExceptionTomlUnitNameNotFound {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find dimension BaseUnit &apos;{0}&apos;.
        /// </summary>
        internal static string ExceptionTomlUnitSectionCannotFindDimension {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitSectionCannotFindDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing dimensions.  Must specifiy at least 1 dimension (e.g. {0}).
        /// </summary>
        internal static string ExceptionTomlUnitsSectionMissingDimensions {
            get {
                return ResourceManager.GetString("ExceptionTomlUnitsSectionMissingDimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown usage [{0}, {1}].
        /// </summary>
        internal static string ExceptionTomlUnknownUsage {
            get {
                return ResourceManager.GetString("ExceptionTomlUnknownUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type &apos;{0}&apos; found.  Valid types: &quot;{1}&quot;.
        /// </summary>
        internal static string ExceptionTomlUsageKindInvalid {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageKindInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate type &apos;{0}&apos; found.
        /// </summary>
        internal static string ExceptionTomlUsageKindsDuplicate {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageKindsDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must not be empty.  Valid types: &quot;{0}&quot;.
        /// </summary>
        internal static string ExceptionTomlUsageKindsEmpty {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageKindsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing child &apos;{0}&apos; sections.  Must specify at least 1.
        /// </summary>
        internal static string ExceptionTomlUsagePageSectionMissingUsages {
            get {
                return ResourceManager.GetString("ExceptionTomlUsagePageSectionMissingUsages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type. Must be either an array of 3 integers or 3 strings.
        /// </summary>
        internal static string ExceptionTomlUsageRangeInvalidDataType {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageRangeInvalidDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid UsagePage &apos;{0}&apos;.  usageSection may only be used with &apos;Sensors&apos; usages..
        /// </summary>
        internal static string ExceptionTomlUsageSectionTagInvalid {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageSectionTagInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type. Must be either an array of 2 integers or 2 strings.
        /// </summary>
        internal static string ExceptionTomlUsagesTagInvalidDataType {
            get {
                return ResourceManager.GetString("ExceptionTomlUsagesTagInvalidDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type. Must be either an array of 2 integers or 2 strings.
        /// </summary>
        internal static string ExceptionTomlUsageTagInvalid {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageTagInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type. Must be either an array of 3 integers or 3 strings.
        /// </summary>
        internal static string ExceptionTomlUsageTransformInvalidDataType {
            get {
                return ResourceManager.GetString("ExceptionTomlUsageTransformInvalidDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value &apos;{0}&apos;.  {1}.
        /// </summary>
        internal static string ExceptionTomlValueOutOfBounds {
            get {
                return ResourceManager.GetString("ExceptionTomlValueOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;{0}&apos;.  Must be an array of two integers.
        /// </summary>
        internal static string ExceptionTomlValueRangeCannotUseMaxRange {
            get {
                return ResourceManager.GetString("ExceptionTomlValueRangeCannotUseMaxRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid type.  Must be an array of two integers or &apos;{0}&apos; or &apos;{1}&apos;.
        /// </summary>
        internal static string ExceptionTomlValueRangeInvalidDataType {
            get {
                return ResourceManager.GetString("ExceptionTomlValueRangeInvalidDataType", resourceCulture);
            }
        }
    }
}
